/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UserFunctions.java
 *
 * Created on May 18, 2011, 12:34:19 AM
 */
package com.users;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import reusable.DBFunctions;

/**
 *
 * @author Wachanga
 */
public class UserFunctions extends javax.swing.JFrame {

    /** Creates new form UserFunctions */
    DBFunctions db;
    ArrayList<String> fullname;
    ArrayList<String> username;
    ArrayList<String> usertype;
    ArrayList<String> password;
    ArrayList<Integer> id;
    int total_number_of_users;
    int index;
    boolean modify_user_data;

    public UserFunctions() {
        modify_user_data = false;//Used to determine whether we can modify user data
        initComponents();
        db = new DBFunctions();
        if (selectAllUsers()) {
            System.out.println("Successfully loaded all users....");
        }
        setTheBounds(getWidth(), getHeight());
        URL url = UserFunctions.class.getResource("/com/res/jdp24.png");
        setIconImage(Toolkit.getDefaultToolkit().createImage(url));
    }
    public UserFunctions(String action, String text) {
        modify_user_data = false;//Used to determine whether we can modify user data
        initComponents();
        db = new DBFunctions();
        if (selectAllUsers()) {
            System.out.println("Successfully loaded all users....");
        }
        setTheBounds(getWidth(), getHeight());
        URL url = UserFunctions.class.getResource("/com/res/jdp24.png");
        setIconImage(Toolkit.getDefaultToolkit().createImage(url));
        
        if(action.equals("AddUser")){
            txtFullName.setText("");
            txtUsername.setText("");
            txtPassword.setText("");
            txtPassword1.setText("");
            cbox_usertype.setSelectedIndex(0);
            modifyData(true);
        }
        if(action.equals("ModifyUser")){
            modify_user_data = true;
            modifyData(modify_user_data);
        }
        
        lbl_info.setText(text);
        
    }

    public final boolean selectAllUsers() {
        total_number_of_users = -1;
        boolean loadUsers = false;
        try {
            fullname = new ArrayList<String>();
            username = new ArrayList<String>();
            usertype = new ArrayList<String>();
            password = new ArrayList<String>();
            id = new ArrayList<Integer>();
            String query = "SELECT * FROM users;";
            ResultSet rs = db.stmt.executeQuery(query);
            while (rs.next()) {
                fullname.add(rs.getString("name"));
                username.add(rs.getString("username"));
                usertype.add(rs.getString("usertype"));
                password.add(rs.getString("password"));
                id.add(rs.getInt("id"));
                loadUsers = true;
                total_number_of_users++;
            }
            //Set the user details available as the first user
            if (loadUsers) {
                lbl_info.setText("Information Label");
                index = 0;
                txtFullName.setText(fullname.get(index));
                txtUsername.setText(username.get(index));
                cbox_usertype.setSelectedItem(usertype.get(index));
                txtPassword.setText(password.get(index));
                txtPassword1.setText(password.get(index));
            } else {
                index = -1;
                lbl_info.setText("There are no users in the database");
            }
        } catch (SQLException ex) {
            Logger.getLogger(UserFunctions.class.getName()).log(Level.SEVERE, null, ex);
        }
        return loadUsers;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPassword1 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtFullName = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbox_usertype = new javax.swing.JComboBox();
        lbl_info = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("User Management - JayDee Pharmaceuticals");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Action"));

        btnAdd.setText("Add");
        btnAdd.setToolTipText("Add new user");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.setEnabled(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnModify.setText("Modify");
        btnModify.setToolTipText("Modify a user's details");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModify, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                    .addComponent(btnRefresh))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd)
                .addGap(18, 18, 18)
                .addComponent(btnModify)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(18, 18, 18)
                .addComponent(btnRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(18, 18, 18)
                .addComponent(btnCancel)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Full Names:");

        jLabel4.setText("Re Type Password: ");

        txtPassword1.setEditable(false);
        txtPassword1.setToolTipText("The user's login password");

        jLabel2.setText("Password: ");

        txtPassword.setEditable(false);
        txtPassword.setToolTipText("The user's login password");

        txtFullName.setEditable(false);
        txtFullName.setToolTipText("The user's full names");

        txtUsername.setEditable(false);
        txtUsername.setToolTipText("The user's username for login purposes");

        jLabel1.setText("Username:");

        jLabel5.setText("UserType:");

        cbox_usertype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "admin", "user" }));
        cbox_usertype.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassword1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtFullName, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(cbox_usertype, 0, 276, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbox_usertype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        lbl_info.setText("Information Label");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Navigation"));

        btnPrev.setText("Previous");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnFirst.setText("First");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnLast.setText("Last");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFirst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPrev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLast)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLast)
                    .addComponent(btnNext)
                    .addComponent(btnFirst)
                    .addComponent(btnPrev))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_info, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(lbl_info, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        if (index < total_number_of_users) {
            txtFullName.setText(fullname.get(index + 1));
            txtUsername.setText(username.get(index + 1));
            txtPassword.setText(password.get(index + 1));
            txtPassword1.setText(password.get(index + 1));
            cbox_usertype.setSelectedItem(usertype.get(index + 1));
            index++;
            lbl_info.setText("Information Label");
        } else {
            lbl_info.setText("No more users");
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        if (index > 0) {
            txtFullName.setText(fullname.get(index - 1));
            txtUsername.setText(username.get(index - 1));
            txtPassword.setText(password.get(index - 1));
            txtPassword1.setText(password.get(index - 1));
            cbox_usertype.setSelectedItem(usertype.get(index - 1));
            index--;
            lbl_info.setText("Information Label");
        } else {
            lbl_info.setText("No more users");
        }
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        //Select all admin users
        int no = -1;
        for (int i = 0; i < usertype.size(); i++) {
            if (usertype.get(i).equals("admin")) {
                no++;
            }
        }
        String text = "Cannot delete the last admin user.";
        boolean finalAdminDelete = false;
        if(usertype.get(index).equals("admin") && no <= 0){
            finalAdminDelete = true;
        }else{
            text = "NB: You need at least one user in the database to delete.";            
        }
        
        if (!finalAdminDelete && total_number_of_users > 0 && JOptionPane.showConfirmDialog(this, "Are you sure you want to delete user='" + fullname.get(index) + "'?", "Confirm Delete", JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION) {

                try {
                    String query = "DELETE FROM users WHERE `id`=" + id.get(index) + ";";
                    db.stmt.execute(query);
                    modifyData(false);
                    selectAllUsers();
                    modify_user_data = false;//Used to determine whether we can modify user data
                    lbl_info.setText("Success in deleting the user");
                } catch (SQLException ex) {
                    Logger.getLogger(UserFunctions.class.getName()).log(Level.SEVERE, null, ex);
                }
            } 
        else {
            lbl_info.setText(text);
            System.out.println("Delete Unsuccessful!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        txtFullName.setText("");
        txtUsername.setText("");
        txtPassword.setText("");
        txtPassword1.setText("");
        cbox_usertype.setSelectedIndex(0);
        modifyData(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String query;
        PreparedStatement pstmt;
        String text;
        String error;
        if (!modify_user_data) {//We are inserting a new user   
            //query = "INSERT INTO users (`name`,`username`,`password`,`usertype`) VALUES "+txtFullName.getText()+",?,MD5(?),?;";
            query = "INSERT INTO `jaydee`.`users` (`id`, `name`, `username`, `password`, `usertype`) VALUES (NULL, ?, ?, MD5(?), ?);";
            text = "New user inserted successfully";
            error = "I'm unable to insert the new user due to a database error!Error #USER_INSERT_1";
        } else {
            query = "UPDATE  `jaydee`.`users` SET  `name` = ?,`username` =  ?,`password` = MD5(?), `usertype` =?  WHERE  `users`.`id` =" + id.get(index) + ";";
            text = "Update was successfull";
            error = "I'm unable to update the details of the user due to a database error!Error #USER_UPDATE_1";
        }
        if (String.valueOf(txtPassword.getPassword()).equals(String.valueOf(txtPassword1.getPassword()))) {
            try {
                pstmt = db.con.prepareStatement(query);
                pstmt.setString(1, txtFullName.getText());
                pstmt.setString(2, txtUsername.getText());
                pstmt.setString(3, String.valueOf(txtPassword.getPassword()));
                pstmt.setString(4, String.valueOf(cbox_usertype.getSelectedItem()));
                pstmt.executeUpdate();
                lbl_info.setText(text);
                int temp = index;
                selectAllUsers();
                index = temp;
                loadUser();
                modifyData(false);
            } catch (SQLException ex) {
                Logger.getLogger(UserFunctions.class.getName()).log(Level.SEVERE, null, ex);
                lbl_info.setText(error);
            }
        } else {
            lbl_info.setText("The paswords you entered do not match!");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        modifyData(false);
        modify_user_data = false;
        loadUser();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        if (total_number_of_users >= 0) {
            index = 0;
            txtFullName.setText(fullname.get(index));
            txtUsername.setText(username.get(index));
            txtPassword.setText(password.get(index));
            txtPassword1.setText(password.get(index));
            cbox_usertype.setSelectedItem(usertype.get(index));
            lbl_info.setText("Information Label");
        } else {
            lbl_info.setText("No more users");
        }
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        if (total_number_of_users >= 0) {
            index = total_number_of_users;
            txtFullName.setText(fullname.get(index));
            txtUsername.setText(username.get(index));
            txtPassword.setText(password.get(index));
            txtPassword1.setText(password.get(index));
            cbox_usertype.setSelectedItem(usertype.get(index));
            lbl_info.setText("Information Label");
        } else {
            lbl_info.setText("No more users");
        }
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        modify_user_data = true;
        modifyData(modify_user_data);
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        modifyData(false);
        selectAllUsers();
        modify_user_data = false;//Used to determine whether we can modify user data
    }//GEN-LAST:event_btnRefreshActionPerformed

    public final void modifyData(boolean isModify) {
        txtFullName.setEditable(isModify);
        txtUsername.setEditable(isModify);
        txtPassword.setEditable(isModify);
        txtPassword1.setEditable(isModify);
        cbox_usertype.setEnabled(isModify);
        btnSave.setEnabled(isModify);
        btnCancel.setEnabled(isModify);

        btnModify.setEnabled(!isModify);
        btnAdd.setEnabled(!isModify);
        btnDelete.setEnabled(!isModify);
        btnFirst.setEnabled(!isModify);
        btnLast.setEnabled(!isModify);
        btnPrev.setEnabled(!isModify);
        btnNext.setEnabled(!isModify);
        lbl_info.setText("Information Label");
    }

    public void loadUser() {
        txtFullName.setText(fullname.get(index));
        txtUsername.setText(username.get(index));
        cbox_usertype.setSelectedItem(usertype.get(index));
        txtPassword.setText(password.get(index));
        txtPassword1.setText(password.get(index));
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//
//            public void run() {
//                new UserFunctions().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cbox_usertype;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lbl_info;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPassword1;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    public final void setTheBounds(int a, int b) {
        int width = a;
        int height = b;
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (screen.width - width) / 2;
        int y = (screen.height - height) / 2;
        setBounds(x, y, width, height);
    }
}
